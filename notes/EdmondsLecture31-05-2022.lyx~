#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 2cm
\rightmargin 1cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Optimal Branching Systems (OBS)
\end_layout

\begin_layout Standard

\series bold
Branching:
\series default
 A set of directed trees that don't share any edges (edge-disjoint), and
 collectively span the graph.
\end_layout

\begin_layout Standard
\noindent

\series bold
Branching system: 
\series default
(Not defined in lecture, but inferred by Nike).
 A set of branchings from 
\begin_inset Formula $r$
\end_inset

 root nodes.
\end_layout

\begin_layout Standard
\noindent

\series bold
Optimal branching system (OBS):
\series default
 Given a directed graph with a cost for each edge and 
\begin_inset Formula $r$
\end_inset

 specific root nodes, find (if they exist) a least expensive branching system
 from those nodes.
 
\end_layout

\begin_layout Standard
\noindent

\series bold
Convenient reduction of OBS:
\series default
 Find (if they exist) a least expensive set of 
\series bold

\begin_inset Formula $k$
\end_inset

 
\series default
branchings which don't share any edges (edge-disjoint) all rooted at node
 
\begin_inset Formula $r$
\end_inset

.
 There is a 
\begin_inset Quotes eld
\end_inset

beautiful, direct, easy algorithm
\begin_inset Quotes erd
\end_inset

 when 
\begin_inset Formula $k=1,$
\end_inset

but we need matroid partitioning and intersections when 
\begin_inset Formula $k>1$
\end_inset

.
\end_layout

\begin_layout Standard
\noindent

\series bold
Disjoint Branchings Theorem: 
\series default
The maximum size of a set 
\begin_inset Formula $B$
\end_inset

 of edge-disjoint 
\series bold

\begin_inset Formula $r$
\end_inset


\series default
-rooted spanning directed trees in 
\begin_inset Formula $G$
\end_inset

 
\series bold
equals
\series default
 the minimum size of a set 
\begin_inset Formula $C$
\end_inset

 of edges of 
\begin_inset Formula $G$
\end_inset

 which are directed into a set 
\begin_inset Formula $S$
\end_inset

 of nodes such that 
\begin_inset Formula $S$
\end_inset

 is non-empty and does not contain root node 
\begin_inset Formula $r.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\max|B|=\min|C|,C=\{C\in G(E):C\text{ are directed into a set \ensuremath{S\in V(G)},\ensuremath{S\ne\emptyset},\ensuremath{r\notin S} }\}
\end{equation}

\end_inset

Good algorithms for finding 
\begin_inset Formula $B$
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 were devised by Lovasz and by Tarjan.
\end_layout

\begin_layout Standard
\noindent

\series bold
Corollary: 
\series default
If a set 
\begin_inset Formula $D\in G(E)$
\end_inset

 such that:
\end_layout

\begin_layout Itemize
(a) 
\begin_inset Formula $D$
\end_inset

 has no edges entering 
\begin_inset Formula $r,$
\end_inset

 and exactly 
\begin_inset Formula $k$
\end_inset

 edges entering each other node of 
\begin_inset Formula $G$
\end_inset

.
 (
\begin_inset Formula $D$
\end_inset

 is?) a basis of a matroid 
\begin_inset Formula $M_{1}$
\end_inset

;
\end_layout

\begin_layout Itemize
(b) 
\begin_inset Formula $D$
\end_inset

 can be partitioned into 
\begin_inset Formula $k$
\end_inset

 edge-disjoint spanning trees of 
\begin_inset Formula $G$
\end_inset

.
 (
\begin_inset Formula $D$
\end_inset

 is?) a basis of 
\begin_inset Formula $M_{2}$
\end_inset

;
\end_layout

\begin_layout Standard
then, 
\begin_inset Formula $D$
\end_inset

 can be partitioned into 
\begin_inset Formula $k$
\end_inset

 edge-disjoint spanning trees of 
\begin_inset Formula $G,$
\end_inset

 each rooted at 
\begin_inset Formula $r.$
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Analogy: 
\series default
When the capacity of each edge is 1, a min-cost flow algorithm finds a set
 of edges which still needs to be partitioned into edge-disjoint paths from
 source to sink, but it's more complicated for spanning directed trees rooted
 at node 
\begin_inset Formula $r.$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
So finding an OBS entails finding a min-cost set 
\begin_inset Formula $D$
\end_inset

 of edges which is both a basis of matroid 
\begin_inset Formula $M_{1}$
\end_inset

 and of 
\begin_inset Formula $M_{2}$
\end_inset

 (optimum matroid intersection problem).
\end_layout

\begin_layout Itemize
\begin_inset Formula $M_{1}=(E,J)$
\end_inset

 in which 
\begin_inset Formula $J$
\end_inset

 has no edges entering node 
\begin_inset Formula $r,$
\end_inset

 and at most (at most? but corollary said 
\begin_inset Quotes eld
\end_inset

exactly
\begin_inset Quotes erd
\end_inset

) 
\begin_inset Formula $k$
\end_inset

 edges entering each other node of 
\begin_inset Formula $G.$
\end_inset

 Edmonds says it's 
\begin_inset Quotes eld
\end_inset

obvious
\begin_inset Quotes erd
\end_inset

 that this is a matroid.
\end_layout

\begin_layout Itemize
\begin_inset Formula $M_{2}=(E,J)$
\end_inset

 in which 
\begin_inset Formula $J$
\end_inset

 can be partitioned into at most 
\begin_inset Formula $k$
\end_inset

 forests.
 This being a matroid is a corollary of 
\series bold
matroid partitioning
\series default
.
\end_layout

\begin_layout Standard

\series bold
Algorithm
\series default
:
\end_layout

\begin_layout Itemize
Find forests in the graph (linearly independent columns of a matrix in GF(2)?)
\end_layout

\begin_layout Itemize
Use a matroid partitioning algorithm to recognize sets of columns which
 are partitionable into 
\begin_inset Formula $k$
\end_inset

 independent sets.
\end_layout

\begin_layout Itemize
Matroid partitioning is used as a subroutine to identify independent sets
 (the 
\begin_inset Formula $J$
\end_inset

) of 
\begin_inset Formula $M_{2}$
\end_inset

.
\end_layout

\begin_layout Itemize
Then do optimum matroid intersection on 
\begin_inset Formula $M_{1}$
\end_inset

 and 
\begin_inset Formula $M_{2}.$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Directed Tree
\series default
: Eric: You sure the arrows don't all have to go in same direction?
\end_layout

\end_body
\end_document
