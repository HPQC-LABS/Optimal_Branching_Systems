#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrartcl
\begin_preamble
%\usepackage[protrusion=true]{microtype} % Better typography
%\usepackage[protrusion=true,expansion=true]{microtype} % Better typography
\usepackage[english]{babel} % English language/hyphenation
\usepackage{amsmath,amsfonts,amsthm,amssymb,amsbsy,mathtools} % Math packages
\usepackage{palatino} % in LyX, standard font isn't vector graphics
%\usepackage{singlepage} % to avoid page break after changing to single column
\usepackage{multicol}
\usepackage[svgnames]{xcolor} % Enabling colors by their 'svgnames'
\usepackage[hang, small,labelfont=bf,up,textfont=it,up]{caption} % Custom captions under/above floats in tables or figures
\usepackage{booktabs} % Horizontal rules in tables
\usepackage{fix-cm}	 % Custom font sizes - used for the initial letter in the document
\usepackage{graphicx}	
\usepackage{sectsty} % Enables custom section titles
\usepackage{ulem}
\usepackage{soul} % for strikethrough \st
\allsectionsfont{\usefont{OT1}{phv}{b}{n}} % Change the font of all section commands
\usepackage{cite}
\usepackage{fancyhdr} % Needed to define custom headers/footers
\pagestyle{fancy} % Enables the custom headers/footers
\usepackage{lastpage} % Used to determine the number of pages in the document (for "Page X of Total")
\usepackage[breaklinks=true]{hyperref}
\usepackage{doi}

%getting rid of hyperref's ugly boxes.
%From:http://tex.stackexchange.com/a/51349
\hypersetup{
  colorlinks   = true, %Colours links instead of ugly boxes
  urlcolor     = blue, %Colour for external hyperlinks
  linkcolor    = blue, %Colour of internal links
  citecolor   = red %Colour of citations
}
\usepackage{url}

% Headers - all currently empty
\lhead{}
\chead{}
\rhead{}

% Footers
\lfoot{}
\cfoot{}
\rfoot{\footnotesize Page \thepage\ of \pageref{LastPage}} % "Page 1 of 2"

\newcommand{\cmark}{\ding{51}}% Checkmark in table of C_n's
\newcommand{\xmark}{\ding{55}}% X in table of C_n's

\renewcommand{\headrulewidth}{0.0pt} % No header rule
\renewcommand{\footrulewidth}{0.4pt} % Thin footer rule

\newcommand\SmallMatrix[1]{{%
%\small\arraycolsep0.3\arraycolsep\ensuremath{\begin{pmatrix}#1\end{pmatrix}}}}
\arraycolsep=0.85\arraycolsep\ensuremath{\begin{pmatrix}#1\end{pmatrix}}}}

\usepackage{lettrine} % Package to accentuate the first letter of the text
\newcommand{\initial}[1]{ % Defines the command and style for the first letter
\lettrine[lines=3,lhang=0.3,nindent=0em]{
\color{DarkGoldenrod}
{\textsf{#1}}}{}}

\newcommand{\frf}[1]{Fig.~\ref{#1}}

\renewcommand\emph[1]{{\it{#1}}}

\usepackage{titling} % Allows custom title configuration

\newcommand{\HorRule}{\color{DarkGoldenrod} \rule{\linewidth}{1pt}} % Defines the gold horizontal rule around the title

\pretitle{\vspace{-80pt} \begin{flushleft} \HorRule \fontsize{24}{24} \usefont{OT1}{phv}{b}{n} \color{DarkRed} \selectfont} % Horizontal rule before the title

\title{Weak-value amplification: state of play} % Your article title

\posttitle{\par\end{flushleft}\vskip 0.5em\vspace{-20pt}} % Whitespace under the title

\posttitle{\par\end{flushleft}\vskip 0.5em\vspace{-20pt}} % Whitespace under the title

\preauthor{\begin{flushleft}\large \lineskip 0.5em \usefont{OT1}{phv}{b}{sl} \color{DarkRed}} % Author font configuration

\postauthor{\footnotesize \usefont{OT1}{phv}{m}{sl} \color{Black} % Configuration for the institution name
%\newline \, $^1$Kyoto University,  606-8502, Kyoto, Japan, and \, $^2$Physical \& Theoretical Chemistry Laboratory, Oxford University, OX1 3QZ, Oxford, UK. $^*$\href{mailto:dattani.nike@gmail.com}{dattani.nike@gmail.com}, $^\dagger$\href{mailto:nathan.bryans@outlook.com}{nathan.bryans@outlook.com}
\newline \, $^1$Waterloo, Ontario. Canada. $^*$\href{mailto:nik.dattani@gmail.com}{nik.dattani@gmail.com}

\vspace{-20pt}
\par\end{flushleft}\HorRule} % Horizontal rule after the title

\thispagestyle{fancy} % Enabling the custom headers/footers for the first page
\end_preamble
\options DIV=calc, paper=a4, fontsize=11pt
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\begin_inset ERT
status open

\begin_layout Plain Layout

{
\backslash
fontsize{0.72cm}{1em}
\backslash
selectfont Implementation of a matroid-based algorithm for finding optimal
 branching systems}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{multicols}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
initial{A}
\end_layout

\end_inset


\series bold
bstract.
 We implement an algorithm to solve the optimal branching systems problem.
 This problem generalizes min-cost max-flow and many other problems.
\end_layout

\begin_layout Standard
The sections below are organized as follows.
\end_layout

\begin_layout Section
Terminology
\end_layout

\begin_layout Standard
\noindent

\series bold
Directed tree:
\series default
 A directed graph (digraph) that would be a tree if we ignored the directions
 of the edges.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This is the Wikipedia definition.
 Alternative names that have been used by others include: polytree, oriented
 tree, singly connected network, etc.
 Note that the arcs do not have to all go in the same directions.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Arborescence: 
\series default
A directed tree with a 
\begin_inset Quotes eld
\end_inset

root
\begin_inset Quotes erd
\end_inset

 such that every node of it has a unique path to it from the root.
 There's always exactly one root.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This is the Wikipedia definition from Arborescence (graph theory) and from
 Polytree.
 Synonyms according to Wikipedia: directed rooted tree, out-arborescence,
 out-tree, branching.
 Wikipedia also says that some authors use arborescence to mean 
\begin_inset Quotes eld
\end_inset

spanning directed tree of a directed graph
\begin_inset Quotes erd
\end_inset

.
 Schrijver defines as a set of arcs B on the digraph D(V,A) such that (V,B)
 is a rooted tree.
 Korte & Vygen simply say it's a 
\begin_inset Quotes eld
\end_inset

connected branching
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\noindent

\series bold
Branching:
\series default
 Schrijver: A subset of arcs such that there's no undirected cycles and
 each node has at most one arc entering it.
 Korte & Vygen: A directed graph becomes a forest if you remove all edge
 directions, and such that each node has at most one arc entering it (same
 as Schrijver but this includes the vertices, not just the arcs).
 Wikipedia says that a branching is often defined as a forest of arborescences.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Spanning subgraph
\series default
 of 
\begin_inset Formula $G=(V,E)$
\end_inset

: A subgraph 
\begin_inset Formula $(V,B)$
\end_inset

 of 
\begin_inset Formula $G$
\end_inset

 such that 
\begin_inset Formula $B\subseteq E$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This appears too simple.
 Basically everything is spanning, including the empty set of edges (meaning
 just the vertices and no edges...
 doesn't seem meaningful in the context of OBS.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The word 
\begin_inset Quotes eld
\end_inset

spanning
\begin_inset Quotes erd
\end_inset

 is used most commonly for the term 
\begin_inset Quotes eld
\end_inset

spanning tree
\begin_inset Quotes erd
\end_inset

 which needs to be connected, so it's not okay for 
\series bold

\begin_inset Formula $B$
\end_inset

 
\series default
to be empty, for example (the edges have to 
\begin_inset Quotes eld
\end_inset

span
\begin_inset Quotes erd
\end_inset

 the graph).
 However Wikipedia says that for 
\begin_inset Quotes eld
\end_inset

spanning forest
\begin_inset Quotes erd
\end_inset

 there's two competing definitions: one where the edges need to span the
 graph, and one where they don't (which is how we defined it here, except
 we allow cycles and a spanning forest would not).
 
\begin_inset Quotes eld
\end_inset

Full spanning forest
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

maximum spanning forest
\begin_inset Quotes erd
\end_inset

 are sometimes used for the 
\begin_inset Quotes eld
\end_inset

other
\begin_inset Quotes erd
\end_inset

 definition of 
\begin_inset Quotes eld
\end_inset

spanning forest
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Branching system 
\series default
of 
\begin_inset Formula $G=(V,E)$
\end_inset

 with 
\begin_inset Formula $|R|$
\end_inset

 specified root nodes: A collection of 
\begin_inset Formula $|R|$
\end_inset

 edge-disjoint arborescences rooted from any of the root nodes, with each
 arborescence being a spanning subgraph of 
\begin_inset Formula $(V\backslash(R\backslash r),E)$
\end_inset

 with 
\begin_inset Formula $r$
\end_inset

 being the root of the arborescence and 
\begin_inset Formula $R$
\end_inset

 containing all specified roots.
 By 
\begin_inset Quotes eld
\end_inset

edge-disjoint
\begin_inset Quotes erd
\end_inset

 we mean that none of these arborescences share any edges.
 Also, every node has at most 
\begin_inset Formula $|R|$
\end_inset

 incoming edges (at most one from each arborescence), and multiple spanning
 arborescenes are allowed to be rooted at the same node.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This is not just a 
\begin_inset Quotes eld
\end_inset

branching
\begin_inset Quotes erd
\end_inset

 when branching means 
\begin_inset Quotes eld
\end_inset

forest of arborescences
\begin_inset Quotes erd
\end_inset

 because the arborescences need to be edge-disjoint, and we need to span
 the graph (but if the edge-disjoint forest of arborescences didn't span
 the graph, we could just add the missing nodes as 
\begin_inset Quotes eld
\end_inset

disconnected
\begin_inset Quotes erd
\end_inset

 arborescences, so this isn't a big deal).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Optimal branching system
\series default
 of a weighted digraph with 
\begin_inset Formula $k$
\end_inset

 specified root nodes: the branching system with the lowest total weight.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\noindent
A 
\begin_inset Quotes eld
\end_inset

trivial
\begin_inset Quotes erd
\end_inset

 branching system is the one where we just have a collection of disconnected
 vertices (total weight is 0).
\end_layout

\end_inset


\end_layout

\begin_layout Section
Algorithm
\end_layout

\begin_layout Subsection
Quick overview
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Edmonds didn't say this, but step 1 should be: 
\begin_inset Quotes eld
\end_inset

remove anything entering a root
\begin_inset Quotes erd
\end_inset

.
 Those things won't be part of a branching system anyway! This will save
 cost in terms of # of edges.
 Any branching system will have (n-k)k edges.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

For an arborescence to be a spanning subgraph of 
\begin_inset Formula $(V\backslash(R\backslash r),E)$
\end_inset

, it needs to have 
\begin_inset Formula $|V|-$
\end_inset


\begin_inset Formula $|R|$
\end_inset

 edges.
 Since branching systems are by definition comprised of 
\begin_inset Formula $|R|$
\end_inset

 edge-disjoint spanning arborescences, all branching systems have exactly
 
\begin_inset Formula $|R|\left(|V|-|R|\right)$
\end_inset

 edges.
 The 
\emph on
optimal 
\emph default
branching system is the least-weight set of edges with size 
\begin_inset Formula $|R|\left(|V|-|R|\right)$
\end_inset

 that is independent in both matroid 
\begin_inset Formula $M_{1}$
\end_inset

 and in matroid 
\begin_inset Formula $M_{2}$
\end_inset

, which are described below:
\end_layout

\begin_layout Itemize
\begin_inset space \negthickspace{}
\end_inset


\begin_inset Formula $M_{1}\negthickspace=\negthickspace(E,F_{1})$
\end_inset

 in which 
\begin_inset Formula $f\in F_{1}$
\end_inset

 has no edges entering any root nodes, and at most
\begin_inset Note Note
status open

\begin_layout Plain Layout
 (at most? but corollary said 
\begin_inset Quotes eld
\end_inset

exactly
\begin_inset Quotes erd
\end_inset

)
\end_layout

\end_inset

 
\begin_inset Formula $|R|$
\end_inset

 edges entering each other node of the graph; 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Edmonds says it's 
\begin_inset Quotes eld
\end_inset

obvious
\begin_inset Quotes erd
\end_inset

 that this is a matroid.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Why are we allowing cycles in the sets in J1? Because when there's more
 than one root, we can have two arborescences which by themselves don't
 have cycles, but when combined, do contain cycles.
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
Is this only different from a branching system, by the fact that it doesn't
 have to be spanning? What about edge-disjointedness? Also J_1 doesn't have
 to be rooted: see 4-node,1-root example!
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset space \negthickspace{}
\end_inset


\begin_inset Formula $M_{2}\negthickspace=\negthickspace(E,F_{2})$
\end_inset

 in which 
\begin_inset Formula $f\in F_{2}$
\end_inset

 has an arboricity
\series bold
 
\series default
of at most 
\begin_inset Formula $|R|$
\end_inset

.
 The 
\series bold
arboricity
\series default
 is the minimum number of forests into which a set of edges can be partitioned.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
This being a matroid is a corollary of 
\series bold
matroid partitioning
\series default
.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Exponential speed-up by exploiting matroid theory
\end_layout

\begin_layout Subsubsection*
Comments on the cost of a naive algorithm
\begin_inset Note Note
status open

\begin_layout Plain Layout
without matroids
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

For a complete directed graph
\begin_inset Note Note
status open

\begin_layout Plain Layout
check this definition
\end_layout

\end_inset

 with 
\begin_inset Formula $|V|=20$
\end_inset

 nodes and 
\begin_inset Formula $|R|=3$
\end_inset

 roots, there's 
\begin_inset Formula $\binom{19}{3}$
\end_inset

 different ways to have 
\begin_inset Formula $|R|$
\end_inset

 edges entering each of the 17 non-root nodes, and therefore 
\begin_inset Formula $\binom{19}{3}^{17}\approx6\times10^{50}$
\end_inset

 elements of 
\begin_inset Formula $F_{1}$
\end_inset

 that could be constructed in this way.
 Therefore it would be impractical to fully enumerate 
\begin_inset Formula $F_{1}$
\end_inset

 
\begin_inset Note Note
status open

\begin_layout Plain Layout
and 
\begin_inset Formula $F_{2}$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
 (how many elements does J2 have? We can use the 
\begin_inset Quotes eld
\end_inset

brute force
\begin_inset Quotes erd
\end_inset

 code that I first sent to Jack, so check)
\end_layout

\end_inset


\end_layout

\end_inset

 and then to try to find the set of size 
\begin_inset Formula $|R|\left(|V|-|R|\right)$
\end_inset

 in 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 that has the optimum weight.
 
\end_layout

\begin_layout Subsubsection*
Benefits of using weighted matroid intersection
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Since the edges in 
\begin_inset Formula $E$
\end_inset

 are all weighted, we can use one of many oracle-based 
\emph on
weighted matroid intersection 
\emph default
algorithms to find (in polynomial time) the lowest-weight set in 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 
\emph on
without 
\emph default
listing all of 
\begin_inset Formula $F_{1}$
\end_inset

 or 
\begin_inset Formula $F_{2}$
\end_inset

.
 These algorithms typically start with the empty set, and add elements from
 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 to it one-by-one such that while its growing in its size (number of elements),
 it always has the optimum total weight out of all sets in 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 with that specific size; when the size becomes 
\begin_inset Formula $|R|(|V|-|R|)$
\end_inset

 we will know that we have the optimum-weight set of 
\begin_inset Formula $|R|(|V|-|R|)$
\end_inset

 edges that is in 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

.
 When selecting which element from 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 to add at each stage, we do not need to know the entirety of 
\begin_inset Formula $F_{1}$
\end_inset

 nor 
\begin_inset Formula $F_{2}$
\end_inset

 since all edges in 
\begin_inset Formula $E$
\end_inset

 are weighted, making it possible to decide an optimal choice for which
 element of 
\begin_inset Formula $E$
\end_inset

 is best to add: out of all elements in 
\begin_inset Formula $E$
\end_inset

 that have not yet been included, there will be a preferred choice based
 on their weights, and we can used the oracles for 
\begin_inset Formula $F_{1}$
\end_inset

 and 
\begin_inset Formula $F_{2}$
\end_inset

 to determine whether or not our preferred choice is suitable or not, and
 continue until we find the best edge to add.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Cost of weighted matroid intersection
\emph on
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
With the above paragraph considered, the total cost for solving the weighted
 matroid intersection problem becomes dependent 
\begin_inset Note Note
status open

\begin_layout Plain Layout
only 
\end_layout

\end_inset

 on the number 
\begin_inset Formula $|E|$
\end_inset

 of edges and on the cost of the oracles that check whether or not a set
 of edges is in 
\begin_inset Formula $F_{1}$
\end_inset

 and 
\begin_inset Formula $F_{2}$
\end_inset

 respectively.
 Various polynomial time algorithms exist for solving this problem.
 In the implementation described here, the cost is 
\begin_inset Formula $\mathcal{O}\left(|E|^{4}+|E|^{3}\theta\right)$
\end_inset

 where 
\begin_inset Formula $\theta$
\end_inset

 is the maximum cost of asking the oracle for 
\begin_inset Formula $F_{1}$
\end_inset

 or 
\begin_inset Formula $F_{2}$
\end_inset

 whether or not a candidate set of edges belong in the corresponding matroid.
\end_layout

\begin_layout Subsubsection*
The 
\begin_inset Formula $F_{1}$
\end_inset

 oracle
\end_layout

\begin_layout Standard
Given the incidence matrix for a graph, it is quick and easy to check whether
 or not a subset of edges is in 
\begin_inset Formula $F_{1}$
\end_inset

 (more details about this are given in the Appendix, along with code that
 accomplishes this task with only 1 line).
 
\end_layout

\begin_layout Subsubsection*
The 
\begin_inset Formula $F_{2}$
\end_inset

 oracle
\end_layout

\begin_layout Standard
Implementing the oracle to check whether or not a set of edges is in 
\begin_inset Formula $F_{2}$
\end_inset

 is much harder to do efficiently than it is for 
\begin_inset Formula $F_{1}$
\end_inset

, but can be done in polynomial time by solving the 
\emph on
matroid partitioning problem
\emph default
 to see if the graphic matroid corresponding to the graph formed by the
 set of edges can be partitioned into 
\begin_inset Formula $|R|$
\end_inset

 or fewer partitions.
 The matroid partitioning procedure requires another oracle, which tells
 us whether or not a set of edges has any cycles, but this can also be done
 efficiently since the existence of cycles implies the existence of linearly
 independent columns in the graph's incidence matrix, which can be determined
 in polynomial time by Edmonds' algorithm for Gaussian elimination in the
 Galois field GF(2).
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Cost of querying the 
\begin_inset Formula $F_{2}$
\end_inset

 oracle
\emph on
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
As with the weighted matroid intersection problem, various polynomial time
 algorihms exist for solving the matroid partitioning problem.
 In the implementation described here, the cost is 
\begin_inset Formula $\mathcal{O}\left(|E|^{4}\varphi\right)$
\end_inset

 where 
\begin_inset Formula $\varphi$
\end_inset

 is the maximum cost of asking the oracle whether or not the candidate set
 of edges has any cycles.
 
\end_layout

\begin_layout Subsubsection*
Total cost
\end_layout

\begin_layout Standard
Overall we are doing 
\begin_inset Formula $\mathcal{O}\left(|E|^{4}+|E|^{3}\theta\right)$
\end_inset

 operations to solve the weighted matroid intersection problem described
 above, with 
\begin_inset Formula $\theta=\mathcal{O}\left(|E|^{4}\varphi\right)$
\end_inset

, and 
\begin_inset Formula $\varphi$
\end_inset

 being the cost of doing Gaussian elimination in the Galois field GF(2).
 This leads to an overall cost of 
\begin_inset Formula $\mathcal{O}\left(|E|^{4}+|E|^{7}\varphi\right)$
\end_inset

 or simply 
\begin_inset Formula $\textcolor{red}{\boldsymbol{\ensuremath{\mathcal{O}\left(|E|^{7}\varphi\right)}}}$
\end_inset

.
 
\end_layout

\begin_layout Section
Pedagogical examples
\end_layout

\begin_layout Standard
The following examples are simple enough for us to solve the problem both
 directly and by using the algorithm described above which takes advantage
 of matroid theory.
 These will hopefully help the reader understand the optimal branching systems
 problem.
 In all graphs, the red nodes are the specified roots.
 
\end_layout

\begin_layout Subsubsection*
3-nodes, 1-root
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An example of a 3-node directed graph with 1 root.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename /home/nike2/Optimal_Branching_Systems_ehuan2_metapost-figs/metapostfigs/fig_3node_1root.pdf
	width 20text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We can directly observe that only two possible branching systems exist:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Formula 
\begin{align}
\mathscr{B}_{1} & =\{A,C\}\\
\mathscr{B}_{2} & =\{A,B\}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The independence families of 
\begin_inset Formula $F_{1}$
\end_inset

 and 
\begin_inset Formula $F_{2}$
\end_inset

 can also be listed completely for this graph:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Formula 
\begin{align}
J_{1} & =P(\mathscr{B}_{1})\cup P(\mathscr{B}_{2})\\
J_{2} & =P(\mathscr{B}_{1})\cup P(\mathscr{B}_{2})\cup P\{B,C\}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Finally, we have that 
\begin_inset Formula $|R|=1,|V|=3,|R|\left(|V|-|R|\right)=2$
\end_inset

 so we are only interested in the sets in 
\begin_inset Formula $J_{1}\cap J_{2}$
\end_inset

 that have two edges in them.
 These are precisely 
\begin_inset Formula $\mathscr{B}_{1}$
\end_inset

 and 
\begin_inset Formula $\mathscr{B}_{2}$
\end_inset

.
 Therefore finding the minimum-weight set with 
\begin_inset Formula $|R|\left(|V|-|R|\right)=2$
\end_inset

 edges in 
\begin_inset Formula $J_{1}\cap J_{2}$
\end_inset

 is equivalent to solving the optimal branching systems problem by finding
 all possible branching systems directly, and then optimizing over them.
\end_layout

\begin_layout Subsubsection*
3-nodes, 2-roots
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
An example of a 3-node directed graph with 2 roots.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /home/nike2/Optimal_Branching_Systems_ehuan2_metapost-figs/metapostfigs/3node_2roots/fig_3node_2roots.pdf
	width 20text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align block

\color black
We can directly observe that no branching systems exist for this graph because
 it's impossible for an arborescence rooted at 
\begin_inset Formula $r_{2}$
\end_inset

 to be a spanning subgraph of the original graph (no arborescence rooted
 at 
\begin_inset Formula $r_{2}$
\end_inset

 can contain all of the original graph's non-root nodes), and since there's
 only one edge connecting 
\begin_inset Formula $r_{1}$
\end_inset

to 
\begin_inset Formula $s$
\end_inset

, it is not possible to have 
\begin_inset Formula $|R|=2$
\end_inset

 edge-disjoint arborescences rooted from 
\begin_inset Formula $r_{1}$
\end_inset

.
 
\end_layout

\begin_layout Standard
The independence families of 
\begin_inset Formula $F_{1}$
\end_inset

 and 
\begin_inset Formula $F_{2}$
\end_inset

 can also be listed completely for this graph:
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula 
\begin{align}
F_{1} & =\{\emptyset,\{A\}\}\\
F_{2} & =P\{A,B;C\}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Although 
\begin_inset Formula $F_{1}\cap F_{2}$
\end_inset

 contains the set 
\begin_inset Formula $\{A\}$
\end_inset

, it does not contain any sets that have 
\begin_inset Formula $|R|\left(|V|-|R|\right)=2$
\end_inset

 edges, so 
\begin_inset Formula $F_{1}\cap_{2}F_{2}=\emptyset$
\end_inset

.
 Therefore again we find that finding the minimum-weight set with 
\begin_inset Formula $|R|\left(|V|-|R|\right)=2$
\end_inset

 edges in 
\begin_inset Formula $J_{1}\cap J_{2}$
\end_inset

 (in this case no such set exists) is equivalent to solving the optimal
 branching systems problem.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "C:/Users/Nike/Desktop/Dropbox/NSD/Papers/library"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{multicols}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
